.prefixed(@prop; @val) {
    -webkit-@{prop}: @val;
    -moz-@{prop}: @val;
    -o-@{prop}: @val;
    -ms-@{prop}: @val;
    @{prop}: @val;
}

.fullsize() {
    width: 100%;
    height: 100%;
}

.transform-style(@style) {
    .prefixed(transform-style; @style);
}

.transform-origin(@x; @y) {
    .prefixed(transform-origin; @x @y);
}

.transform(@t) {
    -webkit-transform: e(replace(@t,"\$","-webkit-","gi"));
    -moz-transform: e(replace(@t,"\$","-moz-","gi"));
    -ms-transform: e(replace(@t,"\$","-ms-","gi"));
    transform: e(replace(@t,"\$","","gi"));
}

.transition(@t) {
    -webkit-transition: e(replace(@t,"\$","-webkit-","gi"));
    -moz-transition: e(replace(@t,"\$","-moz-","gi"));
    -ms-transition: e(replace(@t,"\$","-ms-","gi"));
    transition: e(replace(@t,"\$","","gi"));
}

.perspective(@persp) {
    .prefixed(perspective; @persp);
}

.perspective-origin(@x; @y) {
    .prefixed(perspective-origin; @x @y);
}

.cull-backface() {
    .prefixed(backface-visibility; hidden);
}

.animation-name(@name) {
    .prefixed(animation-name; @name);
}

.flex(@flow) {
    display: flex;
    display: -webkit-flex;
    display: -moz-flex;
    .prefixed(flex-flow; @flow);
}

.flexbox(@box) {
    .prefixed(flex; @box);
}

.flex-justify(@align) {
    .prefixed(justify-content; @align);
}

.flex-align(@align) {
    .prefixed(align-items; @align);
}

.flash-keyframes(@id; @prop; @off-col; @on-col) {
    @-webkit-keyframes @id {
        0%    { @{prop}: @off-col; }
        50%   { @{prop}: @on-col; }
        100%  { @{prop}: @off-col; }
    }
    @-moz-keyframes @id {
        0%    { @{prop}: @off-col; }
        50%   { @{prop}: @on-col; }
        100%  { @{prop}: @off-col; }
    }
    @-o-keyframes @id {
        0%    { @{prop}: @off-col; }
        50%   { @{prop}: @on-col; }
        100%  { @{prop}: @off-col; }
    }
    @keyframes @id {
        0%    { @{prop}: @off-col; }
        50%   { @{prop}: @on-col; }
        100%  { @{prop}: @off-col; }
    }
}

.anim(@anim) {
    .prefixed(animation; @anim);
}

.flash-gen(@id) {
    .anim(e("@{id} 1.0s infinite"));
}

.op-colors(@prop) {
    &.op-sd { @{prop}: @op-col-sd; }
    &.op-inset { @{prop}: @op-col-inset; }
    &.op-stretch { @{prop}: @op-col-stretch; }
    &.op-reflect { @{prop}: @op-col-reflect; }
    &.op-shift { @{prop}: @op-col-shift; }
    &.op-tilt { @{prop}: @op-col-tilt; }
    &.op-scale { @{prop}: @op-col-scale; }
    &.op-delete { @{prop}: @op-col-delete; }
    &.op-leaf { @{prop}: white; }
}